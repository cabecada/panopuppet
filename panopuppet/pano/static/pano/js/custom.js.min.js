// Taken from SB Admin 2 Theme
//https://github.com/IronSummitMedia/startbootstrap-sb-admin-2

$(function () {
    $('#side-menu').metisMenu();
});

//Loads the correct sidebar on window load,
//collapses the sidebar on window resize.
// Sets the min-height of #page-wrapper to window size
$(function () {
    $(window).bind("load resize", function () {
        topOffset = 50;
        width = (this.window.innerWidth > 0) ? this.window.innerWidth : this.screen.width;
        if (width < 768) {
            $('div.navbar-collapse').addClass('collapse');
            topOffset = 100; // 2-row-menu
        } else {
            $('div.navbar-collapse').removeClass('collapse');
        }

        height = ((this.window.innerHeight > 0) ? this.window.innerHeight : this.screen.height) - 1;
        height = height - topOffset;
        if (height < 1) height = 1;
        if (height > topOffset) {
            $("#page-wrapper").css("min-height", (height) + "px");
        }
    });

    var url = window.location;
    var element = $('ul.nav a').filter(function () {
        return this.href == url || url.href.indexOf(this.href) == 0;
    }).addClass('active').parent().parent().addClass('in').parent();
    if (element.is('li')) {
        element.addClass('active');
    }
});

//http://www.jquerybyexample.net/2012/06/get-url-parameters-using-jquery.html
function GetURLParameter(sParam) {
    var sPageURL = window.location.search.substring(1);
    var sURLVariables = sPageURL.split('&');
    for (var i = 0; i < sURLVariables.length; i++) {
        var sParameterName = sURLVariables[i].split('=');
        if (sParameterName[0] == sParam) {
            return sParameterName[1];
        }
    }
}


function get_facts(certname, req_facts, callback) {
    if (!req_facts) {
        var url = '../../api/facts/?certname=' + certname;
    } else {
        var url = '../../api/facts/?certname=' + certname + '&facts=' + req_facts;
    }
    $.get(url, function (json) {
        var recurse_facts = function (fact, prev_title) {
                var data = '';
                for (var key in fact) {
                    if (prev_title) {
                        var title = prev_title + '.' + key;
                    } else {
                        var title = key;
                    }
                    if (!fact.hasOwnProperty(key)) continue;
                    var obj = fact[key];
                    if (typeof obj == 'object') {
                        data += recurse_facts(obj, title);
                    }
                    else {
                        data += '<tr>';
                        data += '<td class="fact_hash">' + title + '</td>';
                        data += '<td>' + obj + '</td>';
                        data += '</tr>';
                    }
                }
                return data
            }
            ;


        var response = $(jQuery(json));
        var facts = response[0]['facts_list'];
        var data = '';
        var num_nodes = facts.length;
        if (num_nodes === 0) {
            data = '<tr><td colspan="2">No facts found.</td></tr>';
        }
        else {
            facts.forEach(function (fact) {
                data += '<tr>';
                //Certname
                if (typeof fact['value'] == 'object') {
                    data += '<th>' + fact['name'] + '</th>';
                    data += '<td></td>';
                    data += recurse_facts(fact['value'], '&nbsp;&nbsp;&nbsp;&nbsp;' + fact['name'])
                }
                else {
                    data += '<th>' + fact['name'] + '</th>';
                    data += '<td>' + fact['value'] + '</td>';
                }
                data += '</tr>';
            });
        }
        // update table with the new json data to the table body
        $("#inventoryfactsbody").html(data);
    })
        .done(function () {
            if (callback && typeof(callback) === "function") {
                callback();
            }
        })
        .fail(function () {
            console.log('failed');
            var data = '<tr><td colspan="2">Can not connect to PuppetDB.</td></tr>';
            $("#inventoryfactsbody").html(data);
        });

}


function get_dashboard_nodes() {
    if (typeof (GetURLParameter('show')) != 'undefined') {
        var show_type = $('#' + GetURLParameter('show'));
    }
    else if (typeof (GetURLParameter('show')) == 'undefined') {
        show_type = $('#recent');
    }
     $(show_type).addClass("active").prependTo($(show_type).parent()).siblings().removeClass("active");

    if ($.fn.dataTable.isDataTable("#nodes-table")) {
        var o = $("#nodes-table").DataTable();
        o.destroy();
        $("#nodes-table").empty();
    }
    var data_url = '/pano/api/testdashboard' + show_type.attr('href');
    $('#nodetable').DataTable({
        "processing": true,
        "serverSide": true,
        "orderMulti": false,
        "pageLength": 25,
        "lengthMenu": [10, 25, 50, 100, 500],
        "ajax": data_url,
        "autoWidth": false,
        "columnDefs": [
            {"title": "Certname", "targets": 0},
            {"title": "Latest Catalogue", "targets": 1, "searchable": false},
            {"title": "Latest Report", "targets": 2, "searchable": false},
            {"title": "Latest Facts", "targets": 3, "searchable": false},
            {"title": "Success", "targets": 4, "searchable": false},
            {"title": "Noop", "targets": 5, "searchable": false},
            {"title": "Failure", "targets": 6, "searchable": false},
            {"title": "Skipped", "targets": 7, "searchable": false},
        ],
        "columns": [
            {"data": "certname"},
            {"data": "catalog_timestamp"},
            {"data": "report_timestamp"},
            {"data": "facts_timestamp"},
            {"data": "successes"},
            {"data": "noops"},
            {"data": "failures"},
            {"data": "skips"},
        ],
        order: [[2, "desc"]],
        "createdRow": function (row, data, index) {
            // URLify the node name
            $('td', row).eq(0).html('<a href="../reports/' + data['certname'] + '">' + data['certname'] + '</a>');

            // Add direct link to the latest report if events exist.
            if (data['successes'] != '0' || data['failures'] != '0' || data['skips'] != '0' || data['noops'] != '0') {
                $('td', row).eq(2).html('<a href="../reports/' + data['certname'] + '?latest=true&report_timestamp=' + data['report_timestamp'] + '">' + data['report_timestamp'] + '</a>');
            }

            // Add colors to the status columns
            $('td', row).eq(4).css('text-align', 'center');
            $('td', row).eq(4).html('<p class="bg-success img-rounded" style="margin-bottom: 0"><strong>' + data['successes'] + '</strong></p>');

            $('td', row).eq(5).css('text-align', 'center');
            $('td', row).eq(5).html('<p class="bg-info img-rounded" style="margin-bottom: 0"><strong>' + data['noops'] + '</strong></p>');

            $('td', row).eq(6).css('text-align', 'center');
            $('td', row).eq(6).html('<p class="bg-danger img-rounded" style="margin-bottom: 0"><strong>' + data['failures'] + '</strong></p>');

            $('td', row).eq(7).css('text-align', 'center');
            $('td', row).eq(7).html('<p class="bg-warning img-rounded" style="margin-bottom: 0"><strong>' + data['skips'] + '</strong></p>');
        }
    });

}